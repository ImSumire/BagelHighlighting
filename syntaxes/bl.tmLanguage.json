{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Bagel Lang",
	"fileTypes": ["bl", "ðŸ¥¯"],
	"scopeName": "source.bl",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#operators"
		},
		{
			"include": "#statements"
		},
		{
			"include": "#constructor"
		},
		{
			"include": "#functions"
		},
		{
			"include": "#qualifiers"
		},
		{
			"include": "#values"
		},
		{
			"include": "#separators"
		},
		{
			"include": "#assignment"
		}
	],
	"repository": {
		"statements": {
			"patterns": [{
				"name": "keyword.control.bl",
				"match": "\\b(if|while|for|return|match|when|try|with|module|struct)\\b"
			}]
		},
		"qualifiers": {
			"patterns": [
				{
					"name": "keyword",
					"match": "\\b(local)\\b"
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.bl",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.bl",
					"match": "\\\\."
				}
			]
		},
		"comments": {
			"patterns": [
				{
					"name": "comment.line.double-slash",
					"match": "\/\/.*"
				},
				{
					"name": "comment.block",
					"begin": "/\\*",
					"end": "\\*/"
				}
			]
		},
		"operators": {
			"patterns": [
				{
					"name": "keyword.operator",
					"match": "(((\\+)|(\\-)|(\\*)|(/))\\.?)|((\\&\\&)|(==)|(>=)|(>)|(<=)|(<)|(!=)|(\\|\\|)|(=)|(\\.\\.)|(::)|(\\->))"
				}
			]
		},
		"separators": {
			"patterns": [
				{
					"name": "punctuation.separator",
					"match": "(:|,|;|\\.|\\|)"
				}
			]
		},
		"constructor": {
			"patterns": [
				{
					"name": "entity.name.class",
					"match": "\\b([A-Z][A-Za-z0-9]*)\\b"
				}
			]
		},
		"values": {
			"patterns": [
				{
					"name": "constant.numeric",
					"match": "\\b[0-9]+"
				}
			]
		},
		"assignment": {
			"patterns": [
				{
					"name": "text.custom",
					"match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b\\s+\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b\\s*=",
					"captures": {
						"1": {
							"name": "keyword"
						}
					}
				}
			]
		},
		"functions": {
			"patterns": [
				{
                    "name": "function.call",
                    "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*\\(",
                    "captures": {
                        "1": {
                            "name": "entity.name.function"
                        }
                    }
                },
				{
					"name": "text.custom",
					"match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b\\s+\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b(?=\\s*<|\\s*\\()",
                    "captures": {
                        "1": {
                            "name": "keyword"
                        },
						"2": {
							"name": "entity.name.function"
						}
                    }
				}
			]
		}
	}
}
